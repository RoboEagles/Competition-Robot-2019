// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4579.Robot2019.subsystems;

import org.usfirst.frc4579.Robot2019.Robot;
import org.usfirst.frc4579.Robot2019.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.PWMVictorSPX;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class BallIntake extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private DigitalInput intakeSensor;
    private Spark intakeMotor;
    private PWMVictorSPX tiltMotor;
    private Encoder encoder;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public BallIntake() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        intakeSensor = new DigitalInput(0);
        addChild("intakeSensor",intakeSensor);
        
        
        intakeMotor = new Spark(5);
        addChild("intakeMotor",intakeMotor);
        intakeMotor.setInverted(false);
        
        tiltMotor = new PWMVictorSPX(6);
        addChild("tiltMotor",tiltMotor);
        tiltMotor.setInverted(false);
        
        encoder = new Encoder(3, 4, false, EncodingType.k4X);
        addChild("encoder",encoder);
        encoder.setDistancePerPulse(1.0);
        encoder.setPIDSourceType(PIDSourceType.kRate);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // Method for ejecting the ball once it is inside the intake.
    // Intended to run within the ejectBall command(button #5 is held)
	public void eject(){
		System.out.println("Ejecting the ball!!!");
        intakeMotor.set(1);
	}
    
    // Method for sucking the ball into the intake.
    // Intended to run within the intakeBall command(button #3 is held)
	public void intake(){
		System.out.println("Intaking the ball!!!");
        intakeMotor.set(-.8);
	}
    
    // Method for tilting the arms up into the perimeter
    public void tiltIntakeUp(){
        tiltMotor.set(-.4);
    }

    // Method for tilting the arms down so that we can intake a ball
    public void tiltIntakeDown(){
        tiltMotor.set(.2);
    }

    // Method for stopping the intake motors
	public void stopIntakeMotor(){
        intakeMotor.stopMotor();
	}

    public void stopTiltMotor(){
        tiltMotor.stopMotor();
    }

    public void reset(){
        stopIntakeMotor();
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

